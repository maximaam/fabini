# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'de'
    supported_languages: de|en|fr
    product_images_dir: '%kernel.project_dir%/public/images/products'

    paypal:
        version: '74.0'
        currency_code: EUR
        sandbox:
            username: mimo.berlino-facilitator_api1.gmail.com
            password: WQTYYURKZJ2VZZ8P
            signature: AAIpGRmmcgCTmV.LsCEFZFtHFZvLACCzl1.GLXJTratF5TNZIMHLPsk1
            endpoint_url: https://api-3T.sandbox.paypal.com/nvp
            payment_url: https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&useraction=commit&token=

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Menu\MenuBuilder:
        arguments: ["@knp_menu.factory", "@request_stack", "@translator", "@doctrine.orm.entity_manager"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }
            - { name: knp_menu.menu_builder, method: createSubCategoryMenu, alias: subCategory }
            - { name: knp_menu.menu_builder, method: createFooterMenu, alias: footer }


    App\Admin\CategoryAdmin:
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Categories' }
        public: true

    App\Admin\ProductAdmin:
        arguments: [~, App\Entity\Product, App\Controller\AdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Products' }
        public: true



    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%product_images_dir%'

    #App\EventListener\ImageUploadListener:
        #tags:
            #- { name: doctrine.event_listener, event: prePersist }
            #- { name: doctrine.event_listener, event: preUpdate }
            #- { name: doctrine.event_listener, event: postLoad }

